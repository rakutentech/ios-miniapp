# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  node: circleci/node@4.7.0
  gh: circleci/github-cli@1.0.4
  macos: circleci/macos@2
  ruby: circleci/ruby@1.2.0
  codecov: codecov/codecov@3.1.1
  app-center: rakutentech/app-center@0.1.3

container_medium: &container_medium
  macos:
    xcode: 14.1
  resource_class: medium

jobs:
  build-and-test:
    <<: *container_medium
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: build_sim_ci
    steps:
      - checkout
      - run: bundle install
      - run: pod install --repo-update
      - run:
          name: Fetch Submodule
          command: |
            git remote add upstream git@github.com:rakutentech/ios-miniapp.git
            git submodule init
            git submodule update --remote
      - run:
          name: Build Simulator
          command: fastlane build_sim_ci
      - run:
          name: Execute Tests
          command: fastlane ci
      - store_artifacts:
          path: ./artifacts/unit-tests
      - persist_to_workspace:
          root: .
          paths:
            - .
      - persist_to_workspace:
          root: ../
          paths:
            - MiniApp-Secrets.xcconfig
      - codecov/upload:
          file: "./artifacts/0/artifacts/unit-tests/report.junit"
      - codecov/upload:
          file: "artifacts/unit-tests/report.html"
      - codecov/upload:
          file: "./artifacts/0/artifacts/unit-tests/compile_commands.json"

  app-center-publish-sim:
    <<: *container_medium
    parameters:
      BUILD_PREFIX:
        type: string
        default: $RMA_DEMO_APP_BUILD_TYPE
      APPCENTER_GROUP:
        type: string
        default: $APP_CENTER_GROUP
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Copy Configurations
          command: cp MiniApp-Secrets.xcconfig ../MiniApp-Secrets.xcconfig
      - run:
          name: Deploy to AppCenter
          no_output_timeout: 30m
          command: ./scripts/deploy-to-app-center.sh -t Simulator -p << parameters.BUILD_PREFIX >> -g << parameters.APPCENTER_GROUP >>
      - run:
          name: Clear Cache
          when: always
          command: rm ../MiniApp-Secrets.xcconfig || true

  app-center-publish-device:
    <<: *container_medium
    parameters:
      BUILD_PREFIX:
        type: string
        default: $RMA_DEMO_APP_BUILD_TYPE
      APPCENTER_GROUP:
        type: string
        default: $APP_CENTER_GROUP
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Copy Configurations
          command: cp MiniApp-Secrets.xcconfig ../MiniApp-Secrets.xcconfig
      - run:
          name: Deploy to AppCenter
          no_output_timeout: 30m
          command: ./scripts/deploy-to-app-center.sh -t Device -p << parameters.BUILD_PREFIX >> -g << parameters.APPCENTER_GROUP >>
      - run:
          name: Clear Cache
          when: always
          command: rm ../MiniApp-Secrets.xcconfig || true

  app-center-publish-prod:
    <<: *container_medium
    parameters:
      APPCENTER_GROUP:
        type: string
        default: $APP_CENTER_GROUP
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Copy Configurations
          command: cp MiniApp-Secrets.xcconfig ../MiniApp-Secrets.xcconfig
      - run:
          name: Deploy to AppCenter
          no_output_timeout: 30m
          command: ./scripts/deploy-to-app-center.sh -t Device -g << parameters.APPCENTER_GROUP >>
      - run:
          name: Clear Cache
          when: always
          command: rm ../MiniApp-Secrets.xcconfig || true

  generate-and-publish-documentation:
    <<: *container_medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Copy Configurations
          command: cp MiniApp-Secrets.xcconfig ../MiniApp-Secrets.xcconfig
      - run:
          name: Build Documentation
          no_output_timeout: 20m
          command: ./scripts/build-doc.sh
      - run:
          name: Release Documentation
          no_output_timeout: 20m
          command: ./scripts/release-docs.sh
      - run:
          name: Clear Cache
          when: always
          command: rm ../MiniApp-Secrets.xcconfig || true

  release-candidate-merge-pr:
    <<: *container_medium
    steps:
      - run:
          name: PR for Candidate Merge to Master
          command: fastlane candidate_pr

  release-sdk:
    <<: *container_medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Copy Configurations
          command: cp MiniApp-Secrets.xcconfig ../MiniApp-Secrets.xcconfig
      - run:
          name: Push to Cocoapods
          no_output_timeout: 20m
          command: ./scripts/release-cocoapods.sh
      - run:
          name: Clear Cache
          when: always
          command: rm ../MiniApp-Secrets.xcconfig || true

workflows:
  version: 2.1
  build-and-release-workflow:
    jobs:
      - build-and-test
      - build-and-test:
          name: "Release Build"
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - app-center-publish-sim:
          name: "Publish Simulator Build"
          BUILD_PREFIX: $RMA_DEMO_APP_BUILD_TYPE
          APPCENTER_GROUP: $APP_CENTER_GROUP
          requires:
            - build-and-test
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: master
      - app-center-publish-device:
          name: "Publish Device Build"
          BUILD_PREFIX: $RMA_DEMO_APP_BUILD_TYPE
          APPCENTER_GROUP: $APP_CENTER_GROUP
          requires:
            - build-and-test
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: master
      - app-center-publish-sim:
          name: "Publish RC Simulator Build"
          BUILD_PREFIX: $RMA_DEMO_APP_BUILD_TYPE_CANDIDATE
          APPCENTER_GROUP: $APP_CENTER_GROUP_CANDIDATE
          requires:
            - build-and-test
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: candidate
      - app-center-publish-device:
          name: "Publish RC Device Build"
          BUILD_PREFIX: $RMA_DEMO_APP_BUILD_TYPE_CANDIDATE
          APPCENTER_GROUP: $APP_CENTER_GROUP_CANDIDATE
          requires:
            - build-and-test
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: candidate
      - app-center-publish-device:
          name: "Publish Feature branch Device Build"
          BUILD_PREFIX: $RMA_DEMO_APP_BUILD_TYPE
          APPCENTER_GROUP: $APP_CENTER_GROUP_FEATURES
          requires:
            - build-and-test
          filters:
            branches:
              only: features/*
      - app-center-publish-prod:
          name: "Publish Production Device Build"
          APPCENTER_GROUP: $APP_CENTER_GROUP_PROD
          requires:
            - Release Build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - release-sdk:
          name: "Release SDK"
          requires:
            - Release Build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - generate-and-publish-documentation:
          name: "Generate and Publish Doc"
          requires:
            - Release SDK
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - release-candidate-merge-pr:
          name: "PR for Candidate Merge to Master"
          requires:
            - Release SDK
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/