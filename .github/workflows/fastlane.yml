name: Fastlane CI

on:
  workflow_run:
    workflows: ["Swiftlint Check"]
    types:
      - completed


jobs:
  build:
    runs-on: macos-latest
    if: >
      ${{ github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' }}
    environment: STG
    env:
      RAS_PROJECT_IDENTIFIER: ${{ secrets.RAS_PROJECT_IDENTIFIER }}
      RAS_PROJECT_SUBSCRIPTION_KEY: ${{ secrets.RAS_PROJECT_SUBSCRIPTION_KEY }}
      RAT_ACCOUNT_IDENTIFIER: ${{ secrets.RAT_ACCOUNT_IDENTIFIER }}
      RAT_ENDPOINT: ${{ secrets.RAT_ENDPOINT }}
      RMA_API_ENDPOINT: ${{ secrets.RMA_API_ENDPOINT }}
      RMA_APP_CENTER_SECRET: ${{ secrets.RMA_APP_CENTER_SECRET }}
      RMA_DEMO_APP_BUILD_TYPE: ${{ secrets.RMA_DEMO_APP_BUILD_TYPE }}
      RMA_GAD_APPLICATION_IDENTIFIER: ${{ secrets.RMA_GAD_APPLICATION_IDENTIFIER }}
    steps:
      - name: 'Download artifact'
      uses: actions/github-script@v3.1.0
      with:
        script: |
          var artifacts = await github.actions.listWorkflowRunArtifacts({
             owner: context.repo.owner,
             repo: context.repo.repo,
             run_id: ${{github.event.workflow_run.id }},
          });
          var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
            return artifact.name == "pr"
          })[0];
          var download = await github.actions.downloadArtifact({
             owner: context.repo.owner,
             repo: context.repo.repo,
             artifact_id: matchArtifact.id,
             archive_format: 'zip',
          });
          var fs = require('fs');
          fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
        - run: unzip pr.zip

      - name: 'Comment on PR'
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          var fs = require('fs');
          var issue_number = Number(fs.readFileSync('./NR'));
          await github.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue_number,
            body: 'Security check'
          });
    - name: Repository checkout
      uses: actions/checkout@v2
      
    - name: Select Xcode Version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Create iPhone X iOS 14.4 simulator
      run: xcrun simctl create "iPhone X" com.apple.CoreSimulator.SimDeviceType.iPhone-X com.apple.CoreSimulator.SimRuntime.iOS-14-4

    - name: Setup ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.2
        bundler-cache: true
        
    - name: Install Pods
      run: |
        pod install
            
    - name: Run tests 
      run: |
        bundle exec fastlane ci
